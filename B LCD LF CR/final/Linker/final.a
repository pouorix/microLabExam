;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.3 Standard
;Automatic Program Generator
;© Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 18/07/2020
;Author  : local home
;Company :
;Comments:
;
;
;Chip type               : ATmega32
;Program type            : Application
;AVR Core Clock frequency: 8/000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*****************************************************/
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// Alphanumeric LCD functions
;#include <alcd.h>
;
;// Standard Input/Output functions
;#include <stdio.h>
;
;#include <delay.h>
;// Declare your global variables here
;
;unsigned char CR = 0x0d, LF =  0x0a;
;unsigned char* first_name = "Mohammad Sadegh", *last_name= "Khavari";

	.DSEG
_0x3:
	.BYTE 0x10
_0x4:
	.BYTE 0x8
;
;void newline(){
; 0000 0026 void newline(){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0027 
; 0000 0028         putchar(LF);
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0029         putchar(CR);
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 002A }
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;
;
;// Declare your global variables here
;
;void main(void)
; 0000 0030 {
;PCODE: $00000015 VOL: 0
; 0000 0031 // Declare your local variables here
; 0000 0032 char input;
; 0000 0033 unsigned char* to_lcd;
; 0000 0034 
; 0000 0035 // Input/Output Ports initialization
; 0000 0036 // Port A initialization
; 0000 0037 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0038 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0039 PORTA=0x00;
;	input -> R17
;	*to_lcd -> R18,R19
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 003A DDRA=0x00;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 003B 
; 0000 003C // Port B initialization
; 0000 003D // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 003E // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 003F PORTB=0x00;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0040 DDRB=0x00;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0041 
; 0000 0042 // Port C initialization
; 0000 0043 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0044 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0045 PORTC=0x00;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0046 DDRC=0x00;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0047 
; 0000 0048 // Port D initialization
; 0000 0049 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 004A // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 004B PORTD=0x00;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 004C DDRD=0x00;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 004D 
; 0000 004E // Timer/Counter 0 initialization
; 0000 004F // Clock source: System Clock
; 0000 0050 // Clock value: Timer 0 Stopped
; 0000 0051 // Mode: Normal top=0xFF
; 0000 0052 // OC0 output: Disconnected
; 0000 0053 TCCR0=0x00;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0054 TCNT0=0x00;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0055 OCR0=0x00;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0056 
; 0000 0057 // Timer/Counter 1 initialization
; 0000 0058 // Clock source: System Clock
; 0000 0059 // Clock value: Timer1 Stopped
; 0000 005A // Mode: Normal top=0xFFFF
; 0000 005B // OC1A output: Discon.
; 0000 005C // OC1B output: Discon.
; 0000 005D // Noise Canceler: Off
; 0000 005E // Input Capture on Falling Edge
; 0000 005F // Timer1 Overflow Interrupt: Off
; 0000 0060 // Input Capture Interrupt: Off
; 0000 0061 // Compare A Match Interrupt: Off
; 0000 0062 // Compare B Match Interrupt: Off
; 0000 0063 TCCR1A=0x00;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0064 TCCR1B=0x00;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0065 TCNT1H=0x00;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0066 TCNT1L=0x00;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0067 ICR1H=0x00;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0068 ICR1L=0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0069 OCR1AH=0x00;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 006A OCR1AL=0x00;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 006B OCR1BH=0x00;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 006C OCR1BL=0x00;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 006D 
; 0000 006E // Timer/Counter 2 initialization
; 0000 006F // Clock source: System Clock
; 0000 0070 // Clock value: Timer2 Stopped
; 0000 0071 // Mode: Normal top=0xFF
; 0000 0072 // OC2 output: Disconnected
; 0000 0073 ASSR=0x00;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0074 TCCR2=0x00;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0075 TCNT2=0x00;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0076 OCR2=0x00;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0077 
; 0000 0078 // External Interrupt(s) initialization
; 0000 0079 // INT0: Off
; 0000 007A // INT1: Off
; 0000 007B // INT2: Off
; 0000 007C MCUCR=0x00;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 007D MCUCSR=0x00;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 007E 
; 0000 007F // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0080 TIMSK=0x00;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0081 
; 0000 0082 // USART initialization
; 0000 0083 // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0084 // USART Receiver: On
; 0000 0085 // USART Transmitter: On
; 0000 0086 // USART Mode: Asynchronous
; 0000 0087 // USART Baud Rate: 9600
; 0000 0088 UCSRA=0x00;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0089 UCSRB=0x18;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 008A UCSRC=0x86;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 008B UBRRH=0x00;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 008C UBRRL=0x33;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 008D 
; 0000 008E // Analog Comparator initialization
; 0000 008F // Analog Comparator: Off
; 0000 0090 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0091 ACSR=0x80;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0092 SFIOR=0x00;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0093 
; 0000 0094 // ADC initialization
; 0000 0095 // ADC disabled
; 0000 0096 ADCSRA=0x00;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0097 
; 0000 0098 // SPI initialization
; 0000 0099 // SPI disabled
; 0000 009A SPCR=0x00;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 009B 
; 0000 009C // TWI initialization
; 0000 009D // TWI disabled
; 0000 009E TWCR=0x00;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 009F 
; 0000 00A0 
; 0000 00A1 // Characters/line: 16
; 0000 00A2 lcd_init(16);
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 00A3 
; 0000 00A4 while (1)
;PCODE: $00000064 VOL: 0
; 0000 00A5       while (1)
;PCODE: $00000065 VOL: 0
; 0000 00A6       {
; 0000 00A7 
; 0000 00A8           input = getchar();
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 00A9           putchar(input);
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 00AA           switch(input){
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 00AB             case '5':
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 00AC                 lcd_clear();
;PCODE: $0000006E VOL: 0
; 0000 00AD                 lcd_gotoxy(0,0);
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 00AE                 lcd_puts(first_name);
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 00AF                 lcd_gotoxy(0,1);
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 00B0                 lcd_puts(last_name);
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 00B1                 break;
;PCODE: $0000007B VOL: 0
; 0000 00B2             case '7':
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 00B3                 lcd_clear();
;PCODE: $0000007F VOL: 0
; 0000 00B4                 break;
;PCODE: $00000080 VOL: 0
; 0000 00B5             case '6':
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 00B6                 newline();
;PCODE: $00000084 VOL: 0
; 0000 00B7                 puts(first_name);
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 00B8                 puts(" ");
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 00B9                 puts(last_name);
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 00BA                 newline();
;PCODE: $0000008C VOL: 0
; 0000 00BB                 break;
;PCODE: $0000008D VOL: 0
; 0000 00BC 
; 0000 00BD             default:
;PCODE: $0000008E VOL: 0
; 0000 00BE                 to_lcd = &input;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 00BF                 if(input <= 122 && input >= 97){
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 00C0                      lcd_puts(to_lcd);
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 00C1                      }
; 0000 00C2                 if(input <= 90 && input >= 65){
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 00C3                      lcd_puts(to_lcd);
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 00C4                      }
; 0000 00C5                 break;
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 00C6           }
;PCODE: $000000AC VOL: 0
; 0000 00C7 
; 0000 00C8       }
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 00C9 }
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0

	.DSEG
_0x11:
	.BYTE 0x2
